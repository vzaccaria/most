#!/bin/sh
# This is a very rudimental script for running custom regression tests on the most 
# platform. Every test has its own piece of code for executing it and outputting
# the result which is of the form PASSED, NOT PASSED. So far there is no support 
# for creating tests in a simpler way (i.e. through a configuration file).
# Keep in mind that this is processed by configure to setup destination directory
# variables.
# This file should test the executable which is in the @bdir@/bin directory
# with whatever driver/optimizer needed.
# Reference test files should be put in the directory tests with a name like testX_output.ref
# and be compared with the actual output of the most which should be put in testX_output.
# Look at Test number 1 for a more detailed description.
#
# Author: Vittorio Zaccaria, vittorio.zaccaria@gmail.com 2007
#


# Test number 1
#
# Execute an most script
@bdir@/bin/most -S -f @sdir@/tests/test1/test1.scr > test1_output
diff test1_output @sdir@/tests/test1/test1_output.ref > tmp
if [ "$?" -ne 0 ]; then 
	echo "Test 1:  NOT PASSED"
else
	echo "Test 1:  PASSED"
fi

# Test number 2
#
# Execute an most script
@bdir@/bin/most -S -f @sdir@/tests/test2/test2.scr > test2_output
diff test2_output @sdir@/tests/test2/test2_output.ref > tmp
if [ "$?" -ne 0 ]; then 
	echo "Test 2:  NOT PASSED"
else
	echo "Test 2:  PASSED"
fi

# Test number 3
#
# Execute an most script and compare the resulting exported db
@bdir@/bin/most -S -f @sdir@/tests/test3/test3.scr > test3_output
diff test3_output @sdir@/tests/test3/test3_output.ref > tmp
if [ "$?" -ne 0 ]; then 
	echo "Test 3a: NOT PASSED"
else
	echo "Test 3a: PASSED"
fi
diff test3_output_db.txt @sdir@/tests/test3/test3_output_db.txt.ref > tmp
if [ "$?" -ne 0 ]; then 
	echo "Test 3b: NOT PASSED"
else
	echo "Test 3b: PASSED"
fi

# Test number 4
#
# Writes and reads a db
@bdir@/bin/most -S -f @sdir@/tests/test4/test4.scr > test4_output
diff test4_output @sdir@/tests/test4/test4_output.ref > tmp
if [ "$?" -ne 0 ]; then 
	echo "Test 4:  NOT PASSED"
else
	echo "Test 4:  PASSED"
fi

# Test number 5
#
# Excercises some control structures 
@bdir@/bin/most -S -f @sdir@/tests/test5/test5.scr > test5_output
diff test5_output @sdir@/tests/test5/test5_output.ref > tmp
if [ "$?" -ne 0 ]; then 
	echo "Test 5:  NOT PASSED"
else
	echo "Test 5:  PASSED"
fi

# Test number 6
#
# Excercises some control structures 
@bdir@/bin/most -S -f @sdir@/tests/test6/test6.scr > test6_output
diff test6_output @sdir@/tests/test6/test6_output.ref > tmp
if [ "$?" -ne 0 ]; then 
	echo "Test 6:  NOT PASSED"
else
	echo "Test 6:  PASSED"
fi
# Test number 7
#
# Excercises some control structures 
@bdir@/bin/most -S -f @sdir@/tests/test7/test7.scr > test7_output
diff test7_output @sdir@/tests/test7/test7_output.ref > tmp
if [ "$?" -ne 0 ]; then 
	echo "Test 7:  NOT PASSED"
else
	echo "Test 7:  PASSED"
fi
# Test number 8
#
# Read and write back a database 
cp @sdir@/tests/test8/tst.db .
@bdir@/bin/most -S -f @sdir@/tests/test8/test8.scr > test8_output
diff tst.db out.db > tmp
if [ "$?" -ne 0 ]; then 
	echo "Test 8:  NOT PASSED"
else
	echo "Test 8:  PASSED"
fi
# Test number 9
#
# Excercises some control structures 
@bdir@/bin/most -S -f @sdir@/tests/test9/test9.scr > test9_output
diff test9_output @sdir@/tests/test9/test9_output.ref > tmp
if [ "$?" -ne 0 ]; then 
	echo "Test 9:  NOT PASSED"
else
	echo "Test 9:  PASSED"
fi
# Test number 10 
#
# Test MPI 
mpirun -np 8 @bdir@/bin/most -S -f @sdir@/tests/test10/test10.scr > test10_output
diff test10_output @sdir@/tests/test10/test10_output.ref > tmp
if [ "$?" -ne 0 ]; then 
	echo "Test 10: NOT PASSED"
else
	echo "Test 10: PASSED"
fi
# Test number 11 
#
# Tests MPI generated db. 
cp @sdir@/tests/test11/par1.db .
diff par.db par1.db > tmp
if [ "$?" -ne 0 ]; then 
	echo "Test 11: NOT PASSED"
else
	echo "Test 11: PASSED"
fi

# Test number 12 
#
# Tests generate paretos with objectives and constraints 
@bdir@/bin/most -S -f @sdir@/tests/test12/test12.scr > test12_output
diff test12_output @sdir@/tests/test12/test12_output.ref > tmp
if [ "$?" -ne 0 ]; then 
	echo "Test 12: NOT PASSED"
else
	echo "Test 12: PASSED"
fi

# Test number 12 
#
# Tests procedures 
@bdir@/bin/most -S -f @sdir@/tests/test13/test13.scr > test13_output
diff test13_output @sdir@/tests/test13/test13_output.ref > tmp
if [ "$?" -ne 0 ]; then 
	echo "Test 13: NOT PASSED"
else
	echo "Test 13: PASSED"
fi

@bdir@/tests/xml/do_tests

	echo "Test 14: PASSED (obsolete)"
# Test number 14 
#
# Tests procedures 
#@bdir@/bin/most -f @sdir@/tests/test14/test14.scr > test14_output
#mv result.db result1.db
#mpirun -np 2 @bdir@/bin/most -f @sdir@/tests/test14/test14.scr > test14_output
#mv result.db result2.db
#diff result1.db result2.db > tmp
#if [ "$?" -ne 0 ]; then 
#	echo "Test 14: NOT PASSED"
#else
#	echo "Test 14: PASSED"
#fi

# Test number 15 
#
# Tests anonymous functions 
@bdir@/bin/most -S -f @sdir@/tests/test15/test15.scr -p > test15_output
diff test15_output @sdir@/tests/test15/test15_output.ref > tmp
if [ "$?" -ne 0 ]; then 
	echo "Test 15: NOT PASSED"
else
	echo "Test 15: PASSED"
fi

# Test number 15 
#
# Tests anonymous functions 
@bdir@/bin/most -S -f @sdir@/tests/test16/test16.scr -p > test16_output
diff test16_output @sdir@/tests/test16/test16_output.ref > tmp
if [ "$?" -ne 0 ]; then 
	echo "Test 16: NOT PASSED"
else
	echo "Test 16: PASSED"
fi

# Test number 17 
#
# Tests anonymous functions 
@bdir@/bin/most -S -f @sdir@/tests/test17/test17.scr -p > test17_output
diff test17_output @sdir@/tests/test17/test17_output.ref > tmp
if [ "$?" -ne 0 ]; then 
	echo "Test 17: NOT PASSED"
else
	echo "Test 17: PASSED"
fi
